{"ast":null,"code":"import _regeneratorRuntime from \"/run/media/phuong/DATA/Frontend_Web_Development/learning-react/23-introduction-to-Next-js/onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"/run/media/phuong/DATA/Frontend_Web_Development/learning-react/23-introduction-to-Next-js/onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/run/media/phuong/DATA/Frontend_Web_Development/learning-react/23-introduction-to-Next-js/onwards-to-a-bigger-project-starting-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/run/media/phuong/DATA/Frontend_Web_Development/learning-react/23-introduction-to-Next-js/onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.jsx\",\n    _this = this;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// our-domain.com/new-meetup\nimport React from 'react';\nimport MeetupForm from '../../components/meetups/NewMeetupForm';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport { ObjectId } from 'mongodb';\n\nvar NewMeetUpPage = function NewMeetUpPage() {\n  function addMeetupHandler(_x) {\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  function _addMeetupHandler() {\n    _addMeetupHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(enteredMeetupData) {\n      var id, response, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('meetupData: ', enteredMeetupData);\n              id = ObjectId(Math.floor(Math.random() * 100));\n              enteredMeetupData = _objectSpread(_objectSpread({}, enteredMeetupData), {}, {\n                _id: id\n              });\n              console.log('stringify: ', JSON.stringify(enteredMeetupData));\n              _context.next = 6;\n              return fetch('http://localhost:3000/api/new-meetup', {\n                method: 'POST',\n                body: JSON.stringify(enteredMeetupData),\n                headers: {\n                  'Content-Type': 'application/json'\n                }\n              });\n\n            case 6:\n              response = _context.sent;\n              _context.next = 9;\n              return response.json();\n\n            case 9:\n              data = _context.sent;\n              console.log('data in form: ', data);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _addMeetupHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(NewMeetupForm, {\n    onAddMeetup: addMeetupHandler,\n    children: \"NewMeetUpPage\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = NewMeetUpPage;\nexport default NewMeetUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewMeetUpPage\");","map":{"version":3,"sources":["/run/media/phuong/DATA/Frontend_Web_Development/learning-react/23-introduction-to-Next-js/onwards-to-a-bigger-project-starting-project/pages/new-meetup/index.jsx"],"names":["React","MeetupForm","NewMeetupForm","ObjectId","NewMeetUpPage","addMeetupHandler","enteredMeetupData","console","log","id","Math","floor","random","_id","JSON","stringify","fetch","method","body","headers","response","json","data"],"mappings":";;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,aAAP,MAA0B,wCAA1B;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,WACXC,gBADW;AAAA;AAAA;;AAAA;AAAA,iFAC1B,iBAAgCC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACEC,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,iBAA5B;AAEMG,cAAAA,EAHR,GAGaN,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAD,CAHrB;AAIEN,cAAAA,iBAAiB,mCAAQA,iBAAR;AAA2BO,gBAAAA,GAAG,EAAEJ;AAAhC,gBAAjB;AACAF,cAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BM,IAAI,CAACC,SAAL,CAAeT,iBAAf,CAA3B;AALF;AAAA,qBAOyBU,KAAK,CAAC,sCAAD,EAAyC;AACnEC,gBAAAA,MAAM,EAAE,MAD2D;AAEnEC,gBAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAeT,iBAAf,CAF6D;AAGnEa,gBAAAA,OAAO,EAAE;AACP,kCAAgB;AADT;AAH0D,eAAzC,CAP9B;;AAAA;AAOQC,cAAAA,QAPR;AAAA;AAAA,qBAeqBA,QAAQ,CAACC,IAAT,EAfrB;;AAAA;AAeQC,cAAAA,IAfR;AAgBEf,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bc,IAA9B;;AAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0B;AAAA;AAAA;;AAmB1B,sBACE,QAAC,aAAD;AAAe,IAAA,WAAW,EAAEjB,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CAtBD;;KAAMD,a;AAwBN,eAAeA,aAAf","sourcesContent":["// our-domain.com/new-meetup\nimport React from 'react';\nimport MeetupForm from '../../components/meetups/NewMeetupForm';\nimport NewMeetupForm from '../../components/meetups/NewMeetupForm';\nimport { ObjectId } from 'mongodb';\n\nconst NewMeetUpPage = () => {\n  async function addMeetupHandler(enteredMeetupData) {\n    console.log('meetupData: ', enteredMeetupData);\n\n    const id = ObjectId(Math.floor(Math.random() * 100));\n    enteredMeetupData = { ...enteredMeetupData, _id: id };\n    console.log('stringify: ', JSON.stringify(enteredMeetupData));\n\n    const response = await fetch('http://localhost:3000/api/new-meetup', {\n      method: 'POST',\n      body: JSON.stringify(enteredMeetupData),\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n\n    const data = await response.json();\n    console.log('data in form: ', data);\n  }\n  return (\n    <NewMeetupForm onAddMeetup={addMeetupHandler}>NewMeetUpPage</NewMeetupForm>\n  );\n};\n\nexport default NewMeetUpPage;\n"]},"metadata":{},"sourceType":"module"}