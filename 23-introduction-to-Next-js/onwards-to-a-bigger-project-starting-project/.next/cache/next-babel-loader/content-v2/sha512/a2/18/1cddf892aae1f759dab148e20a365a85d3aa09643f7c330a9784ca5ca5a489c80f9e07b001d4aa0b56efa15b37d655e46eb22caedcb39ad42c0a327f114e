{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// /api/new-meetup\n// POST /api/new-meetup\nimport { MongoClient } from 'mongodb';\nimport { ObjectId } from 'mongodb';\n\nasync function handler(request, response) {\n  console.log('request: ', request);\n\n  if (request.method === 'POST') {\n    const data = response.body;\n    console.log('data in handler: ', data);\n    const client = await MongoClient.connect('mongodb+srv://phuongsover2:phuongsover1@next-js-api.ef8pc3a.mongodb.net/?retryWrites=true&w=majority');\n    const db = client.db('next-js-mongodb');\n    const meetupsCollection = db.collection('meetups');\n    console.log('data :', data);\n    data = JSON.parse(data);\n    const id = new ObjectId(String(Math.floor(Math.random() * 1000)));\n    data = _objectSpread(_objectSpread({}, data), {}, {\n      id\n    });\n    const result = await meetupsCollection.insertOne(data);\n    console.log(result);\n    client.close();\n    response.status(201).json({\n      message: 'Meetup inserted!'\n    });\n  }\n}\n\nexport default handler;","map":{"version":3,"sources":["/run/media/phuong/DATA/Frontend_Web_Development/learning-react/23-introduction-to-Next-js/onwards-to-a-bigger-project-starting-project/pages/api/new-meetup.js"],"names":["MongoClient","ObjectId","handler","request","response","console","log","method","data","body","client","connect","db","meetupsCollection","collection","JSON","parse","id","String","Math","floor","random","result","insertOne","close","status","json","message"],"mappings":";;;;;;AAAA;AACA;AACA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,SAAzB;;AAEA,eAAeC,OAAf,CAAuBC,OAAvB,EAAgCC,QAAhC,EAA0C;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,OAAzB;;AACA,MAAIA,OAAO,CAACI,MAAR,KAAmB,MAAvB,EAA+B;AAC7B,UAAMC,IAAI,GAAGJ,QAAQ,CAACK,IAAtB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCE,IAAjC;AAEA,UAAME,MAAM,GAAG,MAAMV,WAAW,CAACW,OAAZ,CACnB,sGADmB,CAArB;AAIA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAU,iBAAV,CAAX;AAEA,UAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEAT,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBE,IAAtB;AACAA,IAAAA,IAAI,GAAGO,IAAI,CAACC,KAAL,CAAWR,IAAX,CAAP;AACA,UAAMS,EAAE,GAAG,IAAIhB,QAAJ,CAAaiB,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAD,CAAnB,CAAX;AACAb,IAAAA,IAAI,mCAAQA,IAAR;AAAcS,MAAAA;AAAd,MAAJ;AACA,UAAMK,MAAM,GAAG,MAAMT,iBAAiB,CAACU,SAAlB,CAA4Bf,IAA5B,CAArB;AAEAH,IAAAA,OAAO,CAACC,GAAR,CAAYgB,MAAZ;AAEAZ,IAAAA,MAAM,CAACc,KAAP;AAEApB,IAAAA,QAAQ,CAACqB,MAAT,CAAgB,GAAhB,EAAqBC,IAArB,CAA0B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1B;AACD;AACF;;AAED,eAAezB,OAAf","sourcesContent":["// /api/new-meetup\n// POST /api/new-meetup\nimport { MongoClient } from 'mongodb';\nimport { ObjectId } from 'mongodb';\n\nasync function handler(request, response) {\n  console.log('request: ', request);\n  if (request.method === 'POST') {\n    const data = response.body;\n    console.log('data in handler: ', data);\n\n    const client = await MongoClient.connect(\n      'mongodb+srv://phuongsover2:phuongsover1@next-js-api.ef8pc3a.mongodb.net/?retryWrites=true&w=majority'\n    );\n\n    const db = client.db('next-js-mongodb');\n\n    const meetupsCollection = db.collection('meetups');\n\n    console.log('data :', data);\n    data = JSON.parse(data);\n    const id = new ObjectId(String(Math.floor(Math.random() * 1000)));\n    data = { ...data, id };\n    const result = await meetupsCollection.insertOne(data);\n\n    console.log(result);\n\n    client.close();\n\n    response.status(201).json({ message: 'Meetup inserted!' });\n  }\n}\n\nexport default handler;\n"]},"metadata":{},"sourceType":"module"}